alias ard='arduino-cli'
alias cdr='cd $HOME/repos'
alias p2='python2'
alias p3='python3'
alias p4='ping 4.2.2.2'
alias rmrf='rm -rf'
alias v='vim'
alias r='ranger'
alias psg='ps -ef | grep -v grep | grep'

function dnsgrep () {
    local dir=$HOME/repos/puppetroot/puppet/automod/meatpages/files/dnszones
    rg $1 --no-ignore --no-heading --no-line-number --no-filename $dir
}

function pwgen() {
    openssl rand -base64 48 | tr -d '+/=' | head -c $1
}

function sudoinstall() {
    binary="$1"
    dest="/usr/local/bin"
    sudo install -o root -g wheel -m 4755 $binary $dest
}

function go_test() {
  go test $* |\
      sed ''/PASS/s//$(printf "\033[32mPASS\033[0m")/'' |\
      sed ''/SKIP/s//$(printf "\033[34mSKIP\033[0m")/'' |\
      sed ''/FAIL/s//$(printf "\033[31mFAIL\033[0m")/'' |\
      sed ''/FAIL/s//$(printf "\033[31mFAIL\033[0m")/'' |\
      GREP_COLOR="01;33" egrep --color=always '\s*[a-zA-Z0-9\-_.]+[:][0-9]+[:]|^'
}

alias f='findfiles $1'
alias ff='findfiles -files-only $1'
alias fd='findfiles -dirs-only $1'

# alias ff='find . -type file -name $1'
# alias fd='find . -type directory -name $1'

alias -g G='| rg'
alias -g L='| less'
alias -g H='| head'
alias -g T='| tail'
alias -g L='| less'
alias -g JQ='| jq'
alias -g LC='| wc -l'
alias -g VIM='| vim -'

# go
alias gor='go run'
alias gor.='go run .'

# grep
alias rgi='rg -i'
alias rgl='rg -l'
alias rgil='rg -il'
function vimrg() {
    vim $(rg -il $@)
}

# docker
alias dps='docker ps'

# git
alias g='git'
alias ga.='git add .'
alias ga='git add'
alias gb='git --no-pager branch'
alias gc='git commit'
alias gch='git checkout'
alias gcl='git clone'
alias gcm='git commit -m'
alias gd='git --no-pager diff'
alias gf='git fetch'
alias gp='git push'
alias gpl='git pull'
alias grb='git rebase'
alias gs='git status'
alias gpr='git push -u origin $(git branch --show-current)'
alias gca='git commit --amend --no-edit'
function gclose() {
    local branch=$(git rev-parse --abbrev-ref HEAD)
    git checkout master
    git pull
    git branch --delete ${branch}
}

# tmux
alias tm='tmux'
alias tma='tmux attach-session -t $1'
alias tmls='tmux ls'

# kubernetes
# alias kx='kubectl --context'
alias ktx='kubectl config get-contexts'
alias -g J='-o json'
alias -g Y='-o yaml'
alias -g BAS='run -it --rm --image=byrnedo/alpine-curl:0.1.8 tmp-bastion --command sh'

function kx() {
    local context=$1
    shift 1

    if [[ $1 == debug ]]; then
        kubectl --context $context exec -it $(kubectl --context $context get pod -l app=debug -o name | head -1) -- bash
        return
    fi
    kubectl --context $context $@

}

function parse_k8s_secret() {
    cat | jq '.data' |\
        jq -r 'keys[] as $k | "\($k) \(.[$k])"' |\
        while read key value; do
            echo "$key: $(base64 -D <<< $value)"
        done
}
alias -g SEC='-o json | parse_k8s_secret'

function encrypt_upload() {
    local input_file=$1
    local output_file=${input_file}.age
    local age_public_key="age17gnw5y9tx8spgugtfxycc47g2katw023mt3434v7n0qg70c9gpeqln3ymn"
    local b2_bucket=j18e-misc
    set -e
    age -r ${age_public_key} ${input_file} > /tmp/${output_file}
    rclone copy /tmp/${output_file} b2:j18e-misc
    rm -f /tmp/${output_file}
    set +e
}

alias pm=podman
